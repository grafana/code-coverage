name: Code Coverage
on: workflow_call
jobs:
  comment-coverage-difference:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Changed files
        id: changed
        run: |
          echo "::set-output name=all::$(git diff --name-only ${{ github.event.pull_request.base.ref }}...${{ github.event.pull_request.head.ref }} | xargs)"
      - name: Get paths
        id: relevant-paths
        run: |
          echo "::set-output name=frontend-paths::$(echo ${{ steps.changed.outputs.all }} | grep -Eo 'public\/app\/plugins\/datasource\/(grafana-azure-monitor-datasource|cloud-monitoring|cloudwatch)' | sort -u )"
          echo "::set-output name=backend-paths::$(echo ${{ steps.changed.outputs.all }} | grep -Eo 'pkg\/tsdb\/(azuremonitor|cloudmonitoring|cloudwatch)' | sort -u )"

      - uses: actions/setup-node@v2
        with:
          node-version: 17.x
          cache: yarn
      - name: yarn install for caller's PR
        run: yarn install
      - uses: actions/setup-go@v2
        with:
          go-version: "1.17.8"
      - name: generate go for github.com/grafana/grafana
        if: github.repository == 'grafana/grafana'
        run: make gen-go

      - name: Get go coverage for caller's PR
        id: pr-backend
        run: |
          echo "::set-output name=coverage::$(./scripts/ci-code-coverage.sh false "${{steps.relevant-paths.outputs.backend-paths}}")"
      - name: Get TypeScript coverage for caller's PR
        id: pr-frontend
        run: |
          echo "::set-output name=coverage::$(./scripts/ci-code-coverage.sh true "${{steps.relevant-paths.outputs.frontend-paths}}")"

      - uses: actions/checkout@v3
        with:
          ref: main
      - name: yarn install for caller's main
        run: yarn install
      - name: generate go for github.com/grafana/grafana
        if: github.repository == 'grafana/grafana'
        run: make gen-go

      - name: Get go coverage on caller's main
        id: main-backend
        run: |
          echo "::set-output name=coverage::$(./scripts/ci-code-coverage.sh false "${{steps.relevant-paths.outputs.backend-paths}}")"

      - name: Get TypeScript coverage on caller's main
        id: main-frontend
        run: |
          echo "::set-output name=coverage::$(./scripts/ci-code-coverage.sh true "${{steps.relevant-paths.outputs.frontend-paths}}")"

      - name: Archive backend code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: backend-code-coverage-report
          path: backend_coverage
      - name: Archive frontend code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: frontend-code-coverage-report
          path: coverage/lcov-report

      - name: Create comments
        run: |
          echo "backend-cov-comment=$(./scripts/ci-code-coverage-comment.sh false ${{ github.event.pull_request.number }} "${{steps.pr-backend.outputs.coverage}}" "${{steps.main-backend.outputs.coverage}}" )" >> $GITHUB_ENV
          echo "frontend-cov-comment=$(./scripts/ci-code-coverage-comment.sh true ${{ github.event.pull_request.number }} "${{steps.pr-frontend.outputs.coverage}}" "${{steps.main-frontend.outputs.coverage}}" )" >> $GITHUB_ENV

      - name: Find previous backend comment, if any
        uses: peter-evans/find-comment@v2
        id: find-backend-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: |
            Backend code coverage report for PR #${{ github.event.pull_request.number }}
      - name: Find previous frontend comment, if any
        uses: peter-evans/find-comment@v2
        id: find-frontend-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: |
            Frontend code coverage report for PR #${{ github.event.pull_request.number }}

      - name: Create or update backend comment
        uses: peter-evans/create-or-update-comment@v2
        # Check if the event is not triggered by a fork
        if: github.event.pull_request.head.repo.full_name == github.repository
        with:
          comment-id: ${{ steps.find-backend-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ${{ env.backend-cov-comment }}
          edit-mode: replace
      - name: Create or update frontend comment
        uses: peter-evans/create-or-update-comment@v2
        # Check if the event is not triggered by a fork
        if: github.event.pull_request.head.repo.full_name == github.repository
        with:
          comment-id: ${{ steps.find-frontend-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ${{ env.frontend-cov-comment }}
          edit-mode: replace
